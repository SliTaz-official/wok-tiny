# SliTaz package receipt.

PACKAGE="keyboard"
VERSION="1.0"
CATEGORY="base-system"
SHORT_DESC="keyboard, locales and timezone settings"
MAINTAINER="pascal.bellard@slitaz.org"
LICENSE="GPL2"
WEB_SITE="http://tiny.slitaz.org/"

DEPENDS="base-tiny"
BUILD_DEPENDS="advancecomp"

# Rules to configure and make the package.
compile_rules()
{
	mkdir -p $DESTDIR/usr/share/i18n $stuff
	cd $stuff
	for i in kbd-busybox glibc-base glibc-locale ; do
		tazpkg get $i
		tazpkg extract $i*
	done
	cp -a kbd-busybox*/fs/usr/share/kmap $DESTDIR/usr/share
	cp -a glibc-*/fs/usr/share/i18n/locales $DESTDIR/usr/share/i18n
	cp -a glibc-*/fs/usr/share/zoneinfo $DESTDIR/usr/share
	cd $DESTDIR/usr/share
	for i in i18n/locales zoneinfo ; do
		( cd $i; find * -type f | while read f; do
			grep -q $f $stuff/../receipt || rm -f $f; done )
		find $i -type d | tac | while read d; do
			rmdir $d 2> /dev/null
		done
	done
	find kmap/*.kmap i18n/locales zoneinfo | cpio -o -H newc | \
		gzip -9 > data.cpio.gz
	advdef -z4 data.cpio.gz
	cd $stuff/..
	rm -rf $stuff
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	cp -a $install/. $fs/
}

config_form()
{
	cat <<EOT
<script type="text/javascript">
	
var locale = [], timezone = [];
function setdefault(kbd)
{
	if (locale[kbd] != 'undefined') {
		document.getElementById("locale").value = locale[kbd];
	}
	if (timezone[kbd] != 'undefined') {
		document.getElementById("timezone").value = timezone[kbd];
	}
}

EOT
	awk 'BEGIN { n=0 }
{
	print "locale[\"" $1 "\"] = \"" $2 "\";"
	if ($3 != "-") print "timezone[\"" $1 "\"] = \"" $3 "\";"
	gsub("_"," ",$4)
	name[n] = $4
	kbd[n++] = $1
}
END {
	print "</script>"
	print "<table>"
	print "<tr><td>Keyboard</td>"
	print "<td><select name=\"KEYBOARD\" onChange=\"setdefault(value)\">"
	for (i=0; i < n; i++)
		print "	<option value=\"" kbd[i] "\">" name[i] "</option>"
}' <<EOT | sed "s|value=\"$KEYBOARD\"|& selected=\"selected\"|"
br-abnt2	pt_BR	America/Sao_Paulo	Brasil_(abnt2)
us-acentos	pt_BR	America/Sao_Paulo	Brasil_(us-acentos)
cz-lat2		cs_CZ	Europe/Prague		Cesky
dk-latin1	da_DK	Europe/Copenhagen	Danso
de-latin1	de_DE	Europe/Berlin		Deutsch
de_CH-latin1	de_CH	Europe/Zurich		Deutsch_Schweiz
sg-latin1	de_CH	Europe/Zurich		Deutsch_Schweiz_(sg)
uk		en_GB	Europe/London		English_UK
us		en_US	America/New_York	English_US
us-acentos	en_US	America/New_York	English_US_(acentos)
dvorak		en_US	America/New_York	English_US_(dvorak)
dvorak-l	en_US	America/New_York	English_US_(dvorak-l)
dvorak-r	en_US	America/New_York	English_US_(dvorak-r)
es		es_ES	Europe/Madrid		Espanol
fr-latin1	fr_FR	Europe/Paris		Francais
be-latin1	fr_BE	Europe/Brussels		Francais_Belgique
cf		fr_CA	America/Montreal	Francais_Canada
fr_CH-latin1	fr_CH	Europe/Zurich		Francais_Suisse
croat		hr_HR	Europe/Zagreb		Hrvatski
is-latin1	is_IS	Atlantic/Reykjavik	Islenska
it		it_IT	Europe/Rome		Italiano
jp106		ja_JP	Asia/Tokyo		Japanese
hu		hu_HU	Europe/Budapest		Magyar
nl2		nl_NL	Europe/Amsterdam	Nederlands
no-latin1	nb_NO	Europe/Oslo		Norsk_(Bokmal)
no-latin1	nn_NO	Europe/Oslo		Norsk_(Nynorsk)
pl2		pl_PL	Europe/Warsaw		Polski
pt-latin1	pt_PT	Europe/Lisbon		Portugues
ru		ru_RU	Europe/Moscow		Russian
slovene		sl_SI	Europe/Ljubljan		Slovenski
fi-latin1	fi_FI	Europe/Helsinki		Suomi
se-lat6		sv_SE	Europe/Stockholm	Svenska
trq		tr_TR	Asia/Istanbul		Turkce
tr_q-latin5	tr_TR	Asia/Istanbul		Turkce_(latin5)
EOT
	cat <<EOT
</select></td>
</tr>
<tr>
<td>Locale</td>
<td><select name="LOCALE" id="locale">
EOT
	( cd /usr/share/i18n/locales ; ls ??_* ) | \
	sed "s|.*|	<option>&</option>|;s|>$LOCALE<| selected=\"selected\"&|"
	cat <<EOT
</select></td>
</tr>
<tr>
<td>Timezone</td>
<td><select name="TIMEZONE" id="timezone">
EOT
	( cd /usr/share/zoneinfo ; find */ -type f ) | \
	sed "s|.*|	<option>&</option>|;s|>$TIMEZONE<| selected=\"selected\"&|"
	cat <<EOT
</select></td>
</tr>
</table>
<input type="checkbox" name="USECMDLINE" ${USECMDLINE:+checked=checked }value="yes">
Use the kernel command line arguments <b><i>kmap=</i></b>,
<b><i>lang=</i></b> and <b><i>tz=</i></b> (+200Kb).
EOT
}

post_install()
{
	if [ "$USECMDLINE" = "yes" ]; then
		mkdir $1/bin
		cat > $1/bin/loadkmap <<EOT
#!/bin/sh

cd /usr/share
for i in \$(cat /proc/cmdline); do
	j=\${i#*=}
	case "\$i" in
	kmap=*) d=kmap
		j=\$j.kmap ;;
	lang=*) d=i18n/locales
		echo -e "LANG=\$j\nLC_ALL=\$j" > /etc/locale.conf ;;
	tz=*)	d=zoneinfo
		echo "\$j" > /etc/TZ ;;
	*)	continue
	esac
	rm -rf \$d
	zcat data.cpio.gz | cpio -id \$d/\$j 2>/dev/null
done
cat kmap/* | busybox loadkmap
rm -f /bin/loadkmap data.cpio.gz
EOT
		chmod +x $1/bin/loadkmap
	else
		rm -f $1/usr/share/data.cpio.gz
	fi
	for i in $1/usr/share/i18n/locales/* ; do
		[ $i = $1/usr/share/i18n/locales/$LOCALE ] || rm $i
	done
	[ -n "$LOCALE" ] && cat > $1/etc/locale.conf <<EOT
LANG=$LOCALE
LC_ALL=$LOCALE
EOT
	find $1/usr/share/zoneinfo -type f | while read i; do
		[ $i = $1/usr/share/zoneinfo/$TIMEZONE ] || rm $i
	done
	rmdir $1/usr/share/zoneinfo/* 2> /dev/null
	[ -n "$TIMEZONE" ] && echo "$TIMEZONE" > $1/etc/TZ
	for i in $1/usr/share/kmap/*.kmap ; do
		[ $i = $1/usr/share/kmap/$KEYBOARD.kmap ] || rm $i
	done
}
