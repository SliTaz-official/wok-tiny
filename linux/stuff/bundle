#!/bin/sh

ddq()
{
	dd "$@" 2> /dev/null
}

store()
{
	n=$2; for i in $(seq 8 8 32); do
		printf '\\\\x%02X' $(($n & 255))
		n=$(($n >> 8))
	done | xargs echo -en | ddq bs=1 conv=notrunc of="$3" seek=$(($1))
}

get()
{
	echo $(od -j $(($1)) -N ${3:-4} -t u${3:-4} -An "$2")
}

end()
{
	echo $(( $(get 0x1F1 "$1" 1)*32 +($(get 0x1F4 "$1") +31 +${2:-1})&-${2:-1} ))
}

#install-begin
	sed '1,/^bundle.bin$/!d' $0 > $0.sh
	gzip -9 < bundle.bin | uuencode -m - >> $0.sh
	sed '1,/^bundle.bin$/d' $0 >> $0.sh
	sed -i -e '/^bundle.bin$/d' -e '/install-begin$/,/install-end$/d' $0.sh
	chmod +x $0.sh
	exit
#install-end
if [ ! -s "$1" -a -z "$4" ]; then
	p=$(basename "$0")
	cat <<EOT
Usage: $p kernel [initrd] [@]
or: $p menufile "menu title" file1 "menu entry 1" ...
or: cat floppy.* > floppyset ; $p floppyset
EOT
elif [ -n "$4" ]; then
	out="$1"
	uudecode <<EOT | gunzip > "$out"
bundle.bin
EOT
	pos=$(get 0x1F2 "$out")
	[ $(get $(($pos - 3)) "$out") -eq 24937 ] && crc=2 || crc=0
	echo -en "$2\0" | ddq bs=1 of="$out" seek=$pos conv=notrunc
	pos=$(($pos+${#2}+1))
	shift 2
	free=$((0x1F1 - 2 - $pos - $crc))
	while [ -n "$2" -a $free -ge ${#2} ]; do
		echo "$((($(stat -Lc "%s" "$1")+511)/512))?$1?$2"
		shift 2
	done | awk -F? 'BEGIN { nxt=1; i=0 }
{ ofs[i]=$1; nxt+=$1 ; file[i]=$2; name[i]=$3; i++ }
END { for (j = 0; j < i; j++) { nxt-=ofs[j]
print nxt " " ofs[j] " " file[j] " " name[j] }}' | \
	while read p s file name; do
		x="$(printf '\\x%02x\\x%02x' $(($p % 256)) $(($p / 256)) )"
		echo -en "$x$name\0" | ddq bs=1 of="$out" seek=$pos conv=notrunc
		pos=$(($pos+2+${#name}+1))
		if [ $crc -ne 0 ]; then
			x=$(cat "$file" /dev/zero | ddq bs=512 count=$s | \
			    od -v -t u2 -w2 -An | awk '{i+=$0} \
						END {print (i % 65536)}')
			x="$(printf '\\x%02x\\x%02x' $(($x%256)) $(($x/256)) )"
			echo -en "$x" | ddq bs=1 of="$out" seek=$pos conv=notrunc
			pos=$(($pos+2))
			x="$(printf '\\x%02x\\x%02x' $(($s%256)) $(($s/256)) )"
			echo -en "$x" | ddq bs=1 of="$out" seek=$pos conv=notrunc
			pos=$(($pos+2))
		fi
		echo "$file $s"
	done | awk 'BEGIN { i=0 } { file[i]=$1; size[i]=$2; i++ } 
		END { while (--i >= 0) print file[i] " " size[i] }' | \
	while read file size; do
		cat "$file" /dev/zero | ddq bs=512 count=$size >> "$out"
	done
elif [ -s "$2" ]; then
	base_initrd=$((0x00300000))
	size_initrd=$(stat -Lc %s "$2")
	[ $(($base_initrd + $size_initrd)) -gt $((0x1000000)) ] &&
	base_initrd=$((0x01400000))
	[ "$3" ] && base_initrd=$(($3))
	printf "initrd @%X %X\n" $base_initrd $size_initrd
	store 0x218 $base_initrd "$1"
	store 0x21C $size_initrd "$1"
	ddq bs=16 seek=$(end "$1" 32) of="$1" if="$2"
	ls -l "$1"
else
	if [ $(get 0x1F1 "$1" 1) -eq 0 ]; then
		menu=$(get 0x1F2 "$1")
		[ $(get $(($menu -3)) "$1" 2) -eq 24937 ] && skip=4 || skip=0
		ddq bs=1 skip=$menu count=$((0x1F3 - $menu)) if="$1" | \
		od -v -t u1 -w1 -An | awk -vx=$skip '{
	if (--skip >= 0) next				# crc, len
	if (--bytes < 0) {
		if ($1 == 0) {				# eos
			if (mul > 0) {			# menu label
				if (sector == 0) exit
				skip=x; print sector " " s
			}
			s=""; sector=0; mul=1; bytes=2	# menu title
		}
		else { c=sprintf("%c",$1); s=s c }	# menu title/label
	}
	else { sector += $0*mul; mul *= 256 }
}' |		while read s name; do
			cnt=$(get $(($s*512 + 0x1F4)) "$1")
			cnt=$(($cnt+32*(1+$(get $(($s*512 + 0x1F1)) "$1" 1))))
			x=0
			if [ $(get $(($s*512 + 0x202)) "$1" 2) -eq 25672 ]; then
				x=$(get $(($s*512 + 0x21C)) "$1")
				[ $x -ne 0 ] && x=$(((($cnt+31)/32)*512+$x)) &&
				cnt=$((($x+15)/16))	# initrd
			fi
			ddq bs=16 skip=$((32*$s)) count=$cnt if="$1" of="$name"
			[ $x -ne 0 ] && ddq bs=1 seek=$x count=0 of="$name"
			printf "S%04X %9d " $s $(($cnt*16))
 			ls -l "$name" | cut -c35-
		done
	else
		base_initrd=$(get 0x218 "$1")
		size_initrd=$(get 0x21C "$1")
		[ $base_initrd -ne 0 ] &&
		printf "initrd @%X\n" $base_initrd &&
		ddq bs=1 skip=$(($(end "$1" 32) * 16)) count=$size_initrd \
			if="$1" of=initrd && ls -l initrd
		store 0x218 0 "$1"
		store 0x21C 0 "$1"
		ddq bs=16 count=0 seek=$(end "$1") of="$1"
		ls -l "$1"
	fi
fi
true
