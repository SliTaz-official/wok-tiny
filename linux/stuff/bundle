#!/bin/sh

ddq()
{
	dd "$@" 2> /dev/null
}

store()
{
	n=$2; for i in $(seq 8 8 32); do
		printf '\\\\x%02X' $(($n & 255))
		n=$(($n >> 8))
	done | xargs echo -en | ddq bs=1 conv=notrunc of="$3" seek=$(($1))
}

get()
{
	echo $(od -j $(($1)) -N ${3:-4} -t u${3:-4} -An "$2")
}

end()
{
	echo $(( $(get 0x1F1 "$1" 1)*32 +($(get 0x1F4 "$1") +31 +${2:-1})&-${2:-1} ))
}

if [ ! -s "$1" ]; then
	cat <<EOT
Usage: $0 kernel [initrd] [@]
EOT
elif [ -s "$2" ]; then
	base_initrd=$((0x00300000))
	size_initrd=$(stat -c %s "$2")
	[ $(($base_initrd + $size_initrd)) -gt $((0x1000000)) ] &&
	base_initrd=$((0x01400000))
	[ "$3" ] && base_initrd=$(($3))
	printf "initrd @%X %X\n" $base_initrd $size_initrd
	store 0x218 $base_initrd "$1"
	store 0x21C $size_initrd "$1"
	ddq bs=16 seek=$(end "$1" 32) of="$1" if="$2"
	ls -l "$1"
else
	base_initrd=$(get 0x218 "$1")
	size_initrd=$(get 0x21C "$1")
	[ $base_initrd -ne 0 ] &&
	printf "initrd @%X\n" $base_initrd &&
	ddq bs=1 skip=$(($(end "$1" 32) * 16)) count=$size_initrd \
		if="$1" of=initrd && ls -l initrd
	store 0x218 0 "$1"
	store 0x21C 0 "$1"
	ddq bs=16 count=0 seek=$(end "$1") of="$1"
	ls -l "$1"
fi
