# SliTaz package receipt.

PACKAGE="fbvnc-config"
VERSION="1.0"
CATEGORY="meta"
GROUP="network"
SHORT_DESC="VNC client configuration"
MAINTAINER="pascal.bellard@slitaz.org"
LICENSE="BSD"
WEB_SITE="http://tiny.slitaz.org/"
DEPENDS="base-tiny"

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	mkdir -p $fs/etc
}

config_form()
{
	case "$START" in
	no|yes|ask) ;;
	*) START="cmdline" ;;
	esac
	case "$BPP" in
	8|24|32) ;;
	*) BPP=16 ;;
	esac
	[ -n "$PORT" ] || PORT=5900
	[ -n "$SERVER" ] || SERVER="192.168.0.10"
	cat <<EOT
<table>
<tr>
<td>Autostart</td>
<td>
<input type="radio" name="START" $([ "$START" == "no" ] && echo "checked=checked ")value="no"> never
<input type="radio" name="START" $([ "$START" == "yes" ] && echo "checked=checked ")value="yes"> always
<input type="radio" name="START" $([ "$START" == "ask" ] && echo "checked=checked ")value="ask"> ask during boot
<input type="radio" name="START" $([ "$START" == "cmdline" ] && echo "checked=checked ")value="cmdline"> with kernel argument 'fbvnc=<i>server</i>:<i>port</i>'
</td>
</tr>
<tr>
<td>Bits per pixel</td>
<td>
<input type="radio" name="BPP" $([ "$BPP" == "8" ] && echo "checked=checked ")value="8"> 8
<input type="radio" name="BPP" $([ "$BPP" == "16" ] && echo "checked=checked ")value="16"> 16
<input type="radio" name="BPP" $([ "$BPP" == "32" ] && echo "checked=checked ")value="32"> 32
</td>
</tr>
<tr>
<td>Default server</td>
<td><input type="text" name="SERVER" value="$SERVER"></td>
</tr>
<tr>
<td>Default port</td>
<td><input type="text" name="PORT" value="$PORT"></td>
</tr>
</table>
EOT
}

config_note()
{
	cat <<EOT
<script type="text/javascript">
function update_form()
{
	var hide = true
	for (var i = 0; i < document.forms.length; i++) {
		for (var j = 0; j < document.forms[i].elements.length; j++) {
			var obj = document.forms[i].elements[j]
			if (obj.name == "START" && obj.defaultValue == "yes"
						&& obj.checked == true)
				hide = false
		}
	}	
	for (var i = 0; i < document.forms.length; i++) {
		for (var j = 0; j < document.forms[i].elements.length; j++) {
			var obj = document.forms[i].elements[j]
			switch (obj.name) {
			case "SERVER" :
			case "PORT" :
				obj.disabled = hide; break;
			}
		}
	}	
}
update_form()
window.onchange = update_form
//-->
</script>
EOT
}

post_install()
{
	case "$START" in
	on)	cat >> $1/etc/init.d/local.sh <<EOT

# From fbvnc-config
VNCSERVER="$SERVER"
VNCPORT="$PORT"
sed -i "s|tty1:.*|tty1::respawn:fbvnc -bpp $BPP $SERVER $PORT|" /etc/inittab
kill -1 1
EOT
		;;
	ask)	cat >> $1/etc/init.d/local.sh <<EOT

# From fbvnc-config
echo -n "VNC server to connect (example: 192.168.0.123 5900): "
read -t 30 SERVER
[ -n "\$SERVER" ] &&
sed -i "s|tty1:.*|tty1::respawn:fbvnc -bpp $BPP \$SERVER|" /etc/inittab
set -- \$SERVER 5900
VNCSERVER="\$1"
VNCPORT="\$2"
kill -1 1
EOT
		;;
	cmdline) cat >> $1/etc/init.d/local.sh <<EOT

# From fbvnc-config
for i in \$(cat /proc/cmdline); do
    case "\$i" in
    fbvnc=*)
	i=\${i#fbvnc=}
	sed -i "s|tty1:.*|tty1::respawn:fbvnc -bpp $BPP \${i/:/ }|" /etc/inittab
	set -- \${i/:/ } 5900
	VNCSERVER="\$1"
	VNCPORT="\$2"
	kill -1 1
    esac
done
EOT
		;;
	esac
}
