# SliTaz package receipt.

PACKAGE="base-tiny"
VERSION="1.0"
CATEGORY="base-system"
SHORT_DESC="Tiny SliTaz base configuration files"
MAINTAINER="pascal.bellard@slitaz.org"
LICENSE="BSD"
WEB_SITE="http://tiny.slitaz.org/"
AUTO_SELECTION="always"
CONFIG_FILES="/etc/network.conf /etc/rcS.conf /etc/passwd /etc/fstab \
/etc/inetd.conf /etc/daemons.conf /root/.profile /etc/init.d/local.sh"

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	for i in $CONFIG_FILES ; do
		[ -e $stuff$i ] && echo ${i#/}
	done | ( cd $stuff ; cpio -o -H newc ) | ( cd $fs ; cpio -id )
}

config_form()
{
	if [ -z "$MODE" ]; then
		[ -n "$PASSWORD"   ] || PASSWORD=root
		[ -n "$HOSTNAME"   ] || HOSTNAME=slitaz
		[ -n "$INTERFACE"  ] || INTERFACE=eth0
		[ -n "$IP"         ] || IP=192.168.0.6
		[ -n "$NETMASK"    ] || NETMASK=255.255.255.0
		[ -n "$GATEWAY"    ] || GATEWAY=192.168.0.1
		[ -n "$DNS_SERVER" ] || DNS_SERVER='192.168.0.1 192.168.0.2'
		[ -n "$FSTAB"      ] || FSTAB='/dev/hda1       /mnt         ext3    defaults          0       2'
		[ -n "$RC_LOCAL"   ] || RC_LOCAL='[ -x /mnt/boot/init ] && /mnt/boot/init'
	fi
	cat <<EOT
<table>
<tr>
<td>Root password (empty=disable)</td>
<td><input type="text" name="PASSWORD" value="$PASSWORD" /></td>
</tr>
<tr>
<td>Host name</td>
<td><input type="text" name="HOSTNAME" value="$HOSTNAME" /></td>
</tr>
<tr>
<td>Interface</td>
<td><input type="text" name="INTERFACE" value="$INTERFACE" /></td>
</tr>
<tr>
<td>Network configuration</td>
<td><select name="MODE">
	<option value="STATIC">STATIC</option>
	<option value="DHCP"$([ "$MODE" = "DHCP" ] && echo ' selected="selected"')>DHCP</option>
	<option value="DISABLE"$([ "$MODE" = "DISABLE" ] && echo ' selected="selected"')>DISABLE</option>
</select></td>
</tr>
<tr>
<td>Internet address</td>
<td><input type="text" name="IP" value="$IP" /></td>
</tr>
<tr>
<td>Netmask</td>
<td><input type="text" name="NETMASK" value="$NETMASK" /></td>
</tr>
<tr>
<td>Gateway</td>
<td><input type="text" name="GATEWAY" value="$GATEWAY" /></td>
</tr>
<tr>
<td>DNS server(s)</td>
<td><input type="text" name="DNS_SERVER" value="$DNS_SERVER" /></td>
</tr>
<tr>
<td>Filesystems</td>
<td><textarea name="FSTAB" cols="60" wrap="off">
$FSTAB
</textarea></td>
</tr>
<tr>
<td>Additional boot commands</td>
<td><textarea name="RC_LOCAL" cols="60" wrap="off">
$RC_LOCAL
</textarea></td>
</tr>
</table>
<input type="checkbox" name="KEEP_MODULES" ${KEEP_MODULES:+checked="checked" }/>
Do not remove the modules files after loading modules.
<p>
<input type="checkbox" name="STUPID" ${STUPID:+ckecked="ckecked" }/>
Read floppy sector by sector instead of track by track (slow, stupid but safe).
EOT
}

post_install()
{
	DHCP="no"
	STATIC="yes"
	case "$MODE" in
	"")	return 1;;
	DISABLE)
		STATIC="no" ;;
	DHCP)	DHCP="yes"
		STATIC="no"
	esac
	cat >> $1/boot/mkrootfs.pre_exec <<EOT
if [ -s modules ]; then
	while read mod; do
		sed -i "s/LOAD_MODULES=./&\$mod /" etc/rcS.conf
	done < modules
	grep ^LOAD_MODULES= etc/rcS.conf >> etc/packages.conf
	cp etc/packages.conf boot/packages.conf
	rm -f modules
fi
EOF
	[ "$STUPID" ] && cat >> $1/boot/mkrootfs.pre_exec <<EOT
for i in boot/bzImage boot/memtest boot/ipxe; do
	[ -s \$i ] || continue
	dd if=\$i bs=512 count=1 | \\
	sed "s|\$(echo -en '\x64\x66\x8F\x47\x78')|\$(echo -en '\x5E\x5E\x90\x90\x90')|" | \\
	sed "s|\$(echo -en '\x66\x8F\x47\x78')|\$(echo -en '\x5E\x5E\x90\x90')|" | \\
	sed "s|\$(echo -en '\x77\x02\xB0\x01')|\$(echo -en '\x90\x90\xB0\x01')|" | \\
	sed "s|\$(echo -en '\xB0\x31\x1C\x03\xB4\x0E')|\$(echo -en '\xB0\x31\x14\xFD\xB4\x0E')|" | \\
	dd of=\$i conv=notrunc
done
EOT
	sed -i	"s/^KEEP_MODULES=.*/KEEP_MODULES=\"$KEEP_MODULES\"/" \
			$1/etc/rcS.conf
	sed -i	-e "s/^DNS_SERVER=.*/DNS_SERVER=\"$DNS_SERVER\"/" \
		-e "s/^INTERFACE=.*/INTERFACE=\"$INTERFACE\"/" \
		-e "s/^NETMASK=.*/NETMASK=\"$NETMASK\"/" \
		-e "s/^GATEWAY=.*/GATEWAY=\"$GATEWAY\"/" \
		-e "s/^STATIC=.*/STATIC=\"$STATIC\"/" \
		-e "s/^DHCP=.*/DHCP=\"$DHCP\"/" \
		-e "s/^IP=.*/IP=\"$IP\"/" $1/etc/network.conf
	if [ -n "$PASSWORD" ]; then
		case "$PASSWORD" in
		\$1\$*)
			sed -i "s|^root:[^:]*|root:$PASSWORD|" $1/etc/shadow ;;
		*)
			mkdir $1/fs
			( cd $1/fs ; cpio -idmu ) < dist/rootfs.cpio
			cp $1/etc/passwd $1/fs/etc/
			echo "root:$PASSWORD" | chroot $1/fs/ busybox chpasswd -m
			cp $1/fs/etc/passwd $1/etc/
			rm -rf $1/fs
		esac
	else
		sed -i 's/^root:[^:]*:/root::/' $1/etc/passwd
		mkdir $1/root 2> /dev/null
		cat > $1/root/.profile <<EOT
grep -qs ^root:: /etc/passwd /etc/shadow && passwd
EOT
	fi
	[ -n "$HOSTNAME" ] && echo $HOSTNAME > $1/etc/hostname
	[ -n "$FSTAB" ] && dos2unix >> $1/etc/fstab <<EOT
$FSTAB
EOT
	[ -n "$RC_LOCAL" ] && dos2unix >> $1/etc/init.d/local.sh <<EOT
$RC_LOCAL
EOT
}
